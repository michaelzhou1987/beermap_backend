{"version":3,"sources":["queries/queries.js","views/Addbeerpage/Addbeerpage.component.jsx"],"names":["checkExistingUserQuery","gql","_templateObject","getBeersQuery","_templateObject2","getBeerQuery","_templateObject3","getBreweryQuery","_templateObject4","Addbeerpage","props","_this","Object","_Users_michaelzhou_Projects_react_projects_beermap_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_michaelzhou_Projects_react_projects_beermap_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_michaelzhou_Projects_react_projects_beermap_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","addBeer","_Users_michaelzhou_Projects_react_projects_beermap_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_michaelzhou_Projects_react_projects_beermap_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","wrap","_context","prev","next","CREATE_BEER","variables","beerInput","name","state","brewery","breweryId","breweryName","rate","date","country","beerCountry","beerState","city","beerCity","description","refetchQueries","query","sent","data","createBeer","window","alert","abrupt","history","push","stop","findByCode","arr","code","result","forEach","element","findById","id","_id","showModal","setState","visible","handleOk","e","console","log","trim","CREATE_BREWERY","breweryInput","breweryCountry","breweryState","breweryCity","handleCancel","errorMsg","axios","get","countryData","tempCountry","geonames","map","countryName","geonameId","sort","b","i","length","temp","splice","unshift","apply","_Users_michaelzhou_Projects_react_projects_beermap_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","countryCode","concat","stateData","message","tempState","stateCode","cityData","tempCity","_this2","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","action","method","onSubmit","preventDefault","htmlFor","type","placeholder","defaultValue","onChange","target","value","brewerys","key","antd__WEBPACK_IMPORTED_MODULE_11__","onClick","antd__WEBPACK_IMPORTED_MODULE_12__","d","s","getStateInfo","getCityInfo","antd__WEBPACK_IMPORTED_MODULE_13__","rows","style","height","antd__WEBPACK_IMPORTED_MODULE_14__","title","onOk","onCancel","getCountryData","Component","compose","graphql"],"mappings":"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","file":"static/js/6.4dbac3e9.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\nconst checkExistingUserQuery = gql`\n  query existingUser($email: String!) {\n    existingUser(email: $email) {\n      email\n      _id\n    }\n  }\n`;\n\nconst getBeersQuery = gql`\n  query {\n    beers {\n      name\n      _id\n      country\n      state\n      city\n      rate\n      date\n      breweryName\n      description\n    }\n  }\n`;\n\nconst getBeerQuery = gql`\n  query beer ($id: ID!){\n    beer (_id:$id) {\n      name\n      _id\n      country\n      state\n      city\n      rate\n      date\n      breweryName\n      description\n    }\n  }\n`;\n\nconst getBreweryQuery = gql`\n  query {\n    brewerys {\n      name\n      _id\n    }\n  }\n`\n\n\nexport { checkExistingUserQuery, getBeersQuery, getBeerQuery, getBreweryQuery };","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Addbeerpage.scss';\nimport { Rate, DatePicker, Button, Modal } from 'antd';\n// import { NavLink } from 'react-router-dom';\nimport { getBreweryQuery, getBeersQuery } from '../../queries/queries';\nimport { CREATE_BEER, CREATE_BREWERY } from '../../queries/mutations';\nimport { graphql, compose, Query, ApolloConsumer } from 'react-apollo';\n\nconst dateFormat = 'MM/DD/YYYY';\n\nclass Addbeerpage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: [],\n      state: [],\n      city: [],\n      errorMsg: '',\n      rate: 0,\n      visible: false,\n      // beerName: '',\n      breweryId:'',\n      breweryName: '',\n      breweryCountry: '',\n      breweryState: '',\n      breweryCity: '',\n      beerCountry: '',\n      beerState: '',\n      beerCity: '',\n      date: '',\n      description: '',\n      name: ''\n    };\n  }\n  addBeer = async () => {\n    let newBeer = await this.props.CREATE_BEER({\n      variables: {\n        beerInput: {\n          name: this.state.name,\n          brewery: this.state.breweryId,\n          breweryName: this.state.breweryName,\n          rate: this.state.rate,\n          date: this.state.date,\n          country: this.state.beerCountry,\n          state: this.state.beerState,\n          city: this.state.beerCity,\n          description: this.state.description\n        }\n      },\n      refetchQueries: [{ query: getBeersQuery }]\n    });\n// console.log(newBeer)\n// return\n    if(!newBeer.data.createBeer) {\n      window.alert('not able to create')\n      return \n    }\n    this.props.history.push('/beers')\n  }\n\n  findByCode = (arr, code) => {\n    let result = null;\n    arr.forEach(element => {\n      if(element.code == code) {\n        result = element.name\n      }\n    });\n    return result\n  }\n\n  findById = (arr, id) => {\n    let result = null;\n    arr.forEach(element => {\n      if(element._id == id) {\n        result = element.name\n      }\n    });\n    return result    \n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    console.log(this.state)\n    if(this.state.breweryName.trim() === '') {\n      return\n    }\n    this.props.CREATE_BREWERY({\n      variables: {\n        breweryInput: {\n          name: this.state.breweryName,\n          country: this.state.breweryCountry,\n          state: this.state.breweryState,\n          city: this.state.breweryCity\n        }\n      },\n      refetchQueries: [{\n        query: getBreweryQuery\n      }]\n    });\n    this.setState({\n      visible: false\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false\n    });\n  };\n\n\n  async getCountryData() {\n    this.setState({\n      errorMsg: ''\n    });\n\n    let countryData = await axios.get(\n      'http://api.geonames.org/countryInfoJSON?username=michaelzhou1987'\n    );\n\n    let tempCountry = countryData.data.geonames.map(country => {\n      return {\n        name: country.countryName,\n        code: country.geonameId\n      };\n    });\n\n    tempCountry.sort((a, b) => {\n      return a.name < b.name ? -1 : 1;\n    });\n\n    for (let i = 0; i < tempCountry.length; i++) {\n      if (tempCountry[i].code == '6252001') {\n        let temp = tempCountry.splice(i, 1);\n        tempCountry.unshift(...temp);\n        break;\n      }\n    }\n\n    this.setState({\n      country: tempCountry\n    });\n  }\n\n  async getStateInfo(countryCode) {\n    this.setState({\n      errorMsg: ''\n    });\n\n    let stateData = await axios.get(\n      `http://api.geonames.org/childrenJSON?geonameId=${countryCode}&username=michaelzhou1987`\n    );\n\n    if (!stateData.data.geonames) {\n      this.setState({\n        errorMsg: stateData.data.message\n      });\n      return;\n    }\n\n    let tempState = stateData.data.geonames.map(state => {\n      return {\n        name: state.name,\n        code: state.geonameId\n      };\n    });\n\n    this.setState({\n      state: tempState\n    });\n  }\n\n  async getCityInfo(stateCode) {\n    this.setState({\n      errorMsg: ''\n    });\n\n    let cityData = await axios.get(\n      `http://api.geonames.org/childrenJSON?geonameId=${stateCode}&username=michaelzhou1987`\n    );\n\n    if (!cityData.data.geonames) {\n      this.setState({\n        errorMsg: cityData.data.message\n      });\n      return;\n    }\n\n    let tempCity = cityData.data.geonames.map(city => {\n      return {\n        name: city.name,\n        code: city.geonameId\n      };\n    });\n\n    this.setState({\n      city: tempCity\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"add-beer-page-wrapper\">\n        <h3>Add a new beer</h3>\n        <form\n          action=\"/\"\n          method=\"post\"\n          className=\"container form-wrapper\"\n          onSubmit={e => {\n            e.preventDefault();\n          }}\n        >\n          <div className=\"form-group\">\n            <p className=\"error-message\">{this.state.errorMsg}</p>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputName\">Name of the beer</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"inputName\"\n              placeholder=\"Name of the beer\"\n              defaultValue={this.state.name}\n              onChange={ e => {\n                this.setState({\n                  name: e.target.value\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputBrewery\">Brewery</label>\n            <select\n              id=\"inputBrewery\"\n              className=\"form-control\"\n              onChange={ e => {\n                let result = this.findById(this.props.getBreweryQuery.brewerys, e.target.value)\n                this.setState({\n                  breweryId: e.target.value,\n                  breweryName: result\n                });\n              }}\n            >\n              <option defaultValue>Please choose...</option>\n              {this.props.getBreweryQuery.brewerys &&\n              this.props.getBreweryQuery.brewerys.length > 0\n                ? this.props.getBreweryQuery.brewerys.map(brewery => {\n                    return (\n                      <option value={brewery._id} key={brewery._id}>\n                        {brewery.name}\n                      </option>\n                    );\n                  })\n                : null}\n            </select>\n            <Button type=\"link\" onClick={this.showModal}>\n              Add a new brewery\n            </Button>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputBreweryName\">Brewery Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"inputBreweryName\"\n              placeholder=\"input brewery name...\"\n              defaultValue={this.state.breweryName}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputDate\">Date</label>\n            <DatePicker\n              className=\"form-control isAntd\"\n              // defaultValue={moment('2015/01/01', dateFormat)}\n              onChange={(d, s) => {\n                this.setState({\n                  date: s\n                })\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputCountry\">Country</label>\n            <select\n              id=\"inputCountry\"\n              className=\"form-control\"\n              onChange={e => {\n                let result = this.findByCode(this.state.country, e.target.value)\n                this.getStateInfo(e.target.value)\n                this.setState({\n                  beerCountry: result\n                })\n                }}\n            >\n              <option defaultValue>Please choose...</option>\n              {this.state.country.length > 0\n                ? this.state.country.map(country => {\n                    return (\n                      <option value={country.code} key={country.code}>\n                        {country.name}\n                      </option>\n                    );\n                  })\n                : null}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputState\">State</label>\n            <select\n              id=\"inputState\"\n              className=\"form-control\"\n              onChange={e => {\n                let result = this.findByCode(\n                  this.state.state,\n                  e.target.value\n                );\n                this.getCityInfo(e.target.value)\n                this.setState({\n                  beerState: result\n                });\n              }}\n            >\n              <option defaultValue>Please choose...</option>\n              {this.state.state.length > 0\n                ? this.state.state.map(state => {\n                    return (\n                      <option value={state.code} key={state.code}>\n                        {state.name}\n                      </option>\n                    );\n                  })\n                : null}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputCity\">City</label>\n            <select id=\"inputCity\" className=\"form-control\" onChange={e=>{\n                let result = this.findByCode(\n                  this.state.city,\n                  e.target.value\n                ); \n                this.setState({\n                  beerCity: result\n                });\n            }}>\n              <option defaultValue>Please choose...</option>\n              {this.state.city.length > 0\n                ? this.state.city.map(city => {\n                    return (\n                      <option value={city.code} key={city.code}>\n                        {city.name}\n                      </option>\n                    );\n                  })\n                : null}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"\" className=\"control-label\">\n              Rate This Beer\n            </label>\n            <Rate\n              className=\"form-control isAntd\"\n              onChange={value => {\n                this.setState({\n                  rate: value\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\" className=\"control-label\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              className=\"form-control\"\n              rows=\"5\"\n              style={{\n                height: 'unset'\n              }}\n              defaultValue={this.state.description}\n              onChange={e=>{\n                this.setState({\n                  description: e.target.value\n                })\n              }}\n            />\n          </div>\n\n          <Button type=\"primary\" onClick={this.addBeer}>Submit</Button>\n        </form>\n\n        <Modal\n          title=\"Basic Modal\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <form\n            action=\"\"\n            onSubmit={e => {\n              e.preventDefault();\n            }}\n          >\n            <div className=\"form-wrapper\">\n              <div className=\"form-group\">\n                <label htmlFor=\"brewery-input-name\">\n                  Name of the brewery\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"brewery-input-name\"\n                  placeholder=\"Name of the brewery\"\n                  onChange={e => {\n                    this.setState({\n                      breweryName: e.target.value\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"brewery-inputCountry\">Country</label>\n                <select\n                  id=\"brewery-inputCountry\"\n                  className=\"form-control\"\n                  onChange={e => {\n                    let result = this.findByCode(\n                      this.state.country,\n                      e.target.value\n                    );\n\n                    this.getStateInfo(e.target.value);\n                    this.setState({\n                      breweryCountry: result\n                    });\n                  }}\n                >\n                  <option defaultValue>Please choose...</option>\n                  {this.state.country.length > 0\n                    ? this.state.country.map(country => {\n                        return (\n                          <option value={country.code} key={country.code}>\n                            {country.name}\n                          </option>\n                        );\n                      })\n                    : null}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"brewery-inputState\">State</label>\n                <select\n                  id=\"brewery-inputState\"\n                  className=\"form-control\"\n                  onChange={e => {\n                    let result = this.findByCode(\n                      this.state.state,\n                      e.target.value\n                    );\n                    this.getCityInfo(e.target.value);\n                    this.setState({\n                      breweryState: result\n                    });\n                  }}\n                >\n                  <option defaultValue>Please choose...</option>\n                  {this.state.state.length > 0\n                    ? this.state.state.map(state => {\n                        return (\n                          <option value={state.code} key={state.code}>\n                            {state.name}\n                          </option>\n                        );\n                      })\n                    : null}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"brewery-inputCity\">City</label>\n                <select\n                  id=\"brewery-inputCity\"\n                  className=\"form-control\"\n                  onChange={e => {\n                    console.log(e.target.value);\n                    let result = this.findByCode(\n                      this.state.city,\n                      e.target.value\n                    );\n                    console.log(result);\n                    this.setState({\n                      breweryCity: result\n                    });\n                  }}\n                >\n                  <option defaultValue>Please choose...</option>\n                  {this.state.city.length > 0\n                    ? this.state.city.map(city => {\n                        return (\n                          <option value={city.code} key={city.code}>\n                            {city.name}\n                          </option>\n                        );\n                      })\n                    : null}\n                </select>\n              </div>\n            </div>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.getCountryData();\n    console.log(this.props)\n  }\n}\n\nexport default compose(\n  graphql(getBreweryQuery, {\n    name: 'getBreweryQuery'\n  }),\n  graphql(CREATE_BEER, {\n    name: 'CREATE_BEER'\n  }),\n  graphql(CREATE_BREWERY, {\n    name: 'CREATE_BREWERY'\n  })\n)(Addbeerpage);\n"],"sourceRoot":""}